{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO9h/RMtJT4B9h/mHnpf2zn",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/danna567/danna/blob/main/Untitled5.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XpAzeAqsQDui",
        "outputId": "ee2c9d37-1825-4bae-ab31-ded58ff1c5af"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "🎮 Bienvenido al juego del Ahorcado 🎮\n",
            "\n",
            "Palabra:  _ _ _ _ _ _\n",
            "Letras usadas: \n",
            "Intentos restantes: 6\n"
          ]
        }
      ],
      "source": [
        "import random\n",
        "\n",
        "# Lista de palabras para el juego\n",
        "palabras = [\"python\", \"programacion\", \"ahorcado\", \"inteligencia\", \"desarrollo\"]\n",
        "palabra = random.choice(palabras)\n",
        "palabra_oculta = [\"_\" for _ in palabra]\n",
        "\n",
        "intentos_restantes = 6\n",
        "letras_intentadas = []\n",
        "\n",
        "print(\"🎮 Bienvenido al juego del Ahorcado 🎮\")\n",
        "\n",
        "while intentos_restantes > 0 and \"_\" in palabra_oculta:\n",
        "    print(\"\\nPalabra: \", \" \".join(palabra_oculta))\n",
        "    print(\"Letras usadas:\", \", \".join(letras_intentadas))\n",
        "    print(f\"Intentos restantes: {intentos_restantes}\")\n",
        "\n",
        "    letra = input(\"Ingresa una letra: \").lower()\n",
        "\n",
        "    if not letra.isalpha() or len(letra) != 1:\n",
        "        print(\"❌ Ingresa solo UNA letra válida.\")\n",
        "        continue\n",
        "\n",
        "    if letra in letras_intentadas:\n",
        "        print(\"❗ Ya intentaste esa letra.\")\n",
        "        continue\n",
        "\n",
        "    letras_intentadas.append(letra)\n",
        "\n",
        "    if letra in palabra:\n",
        "        for i, l in enumerate(palabra):\n",
        "            if l == letra:\n",
        "                palabra_oculta[i] = letra\n",
        "        print(\"✅ ¡Bien! Letra correcta.\")\n",
        "    else:\n",
        "        intentos_restantes -= 1\n",
        "        print(\"❌ Letra incorrecta.\")\n",
        "\n",
        "# Resultado del juego\n",
        "if \"_\" not in palabra_oculta:\n",
        "    print(f\"\\n🎉 ¡Felicidades! Adivinaste la palabra: {palabra}\")\n",
        "else:\n",
        "    print(f\"\\n💀 Perdiste. La palabra era: {palabra}\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "zHMVLgPuh1b_"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
